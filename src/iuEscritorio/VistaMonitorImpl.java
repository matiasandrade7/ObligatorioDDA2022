/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iuEscritorio;

/**
 *
 * @author Nahue
 */
import javax.swing.JOptionPane;
import Controlador.ControladorVistaMonitor;
import Logica.Fachada;
import Modelo.Llamada;
import Modelo.Sector;
import com.sun.tools.javac.Main;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class VistaMonitorImpl extends javax.swing.JFrame implements IVistaMonitor {

    private ControladorVistaMonitor controlador;

    public VistaMonitorImpl(java.awt.Frame parent, boolean modal) {
        initComponents();
        setLocationRelativeTo(parent);
        controlador = new ControladorVistaMonitor(this);
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSectores = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        lSectoresLlamadas = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jToolBar1.setBackground(new java.awt.Color(204, 204, 204));
        jToolBar1.setForeground(new java.awt.Color(0, 0, 0));
        jToolBar1.setRollover(true);

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aplicaciones de monitoreo");
        jToolBar1.add(jLabel1);

        jListSectores.setBackground(new java.awt.Color(255, 255, 255));
        jListSectores.setBorder(null);
        jListSectores.setForeground(new java.awt.Color(0, 0, 0));
        jListSectores.setToolTipText("");
        jListSectores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListSectoresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListSectores);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Sectores");

        jTable.setBackground(new java.awt.Color(255, 255, 255));
        jTable.setForeground(new java.awt.Color(0, 0, 0));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#llamada", "Estado", "Inicio", "Fin", "#puesto", "Trabajador", "Duracion", "Costo", "Cliente", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.setGridColor(new java.awt.Color(153, 153, 153));
        jTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane5.setViewportView(jTable);

        lSectoresLlamadas.setForeground(new java.awt.Color(0, 0, 0));
        lSectoresLlamadas.setText("<Todos los sectores>");
        lSectoresLlamadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lSectoresLlamadasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lSectoresLlamadas)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSectoresLlamadas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListSectoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListSectoresValueChanged
        sectorSeleccionado();
    }//GEN-LAST:event_jListSectoresValueChanged

    private void lSectoresLlamadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lSectoresLlamadasMouseClicked
        sectoresSeleccionados();
    }//GEN-LAST:event_lSectoresLlamadasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList jListSectores;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lSectoresLlamadas;
    // End of variables declaration//GEN-END:variables

    protected void setControlador(ControladorVistaMonitor controlador) {
        this.controlador = controlador;
    }

    public ControladorVistaMonitor getControlador() {
        return this.controlador;
    }

    @Override
    public void inicializar() {
        controlador.inicialiar();
    }

    private void sectorSeleccionado() {
        String nombreSector = (String) jListSectores.getSelectedValue();
        Sector sectorSeleccionado = Fachada.getInstancia().buscarSector(nombreSector);
        controlador.sectorSeleccionado(sectorSeleccionado);
    }

    private void sectoresSeleccionados() {
        controlador.sectoresSeleccionados();
    }

    @Override
    public void mostrarSectores(ArrayList<Sector> sectores) {
        DefaultListModel modelo = new DefaultListModel();
        jListSectores.setModel(modelo);
        for (int i = 0; i < sectores.size(); i++) {
            modelo.addElement(sectores.get(i).getNombre());
        }

    }

    @Override
    public void mostrarLlamadasSector(Sector sectorSeleccionado) {
        if (sectorSeleccionado == null) {
            jTable.setModel(new DefaultTableModel());
        } else {
            jTable.setModel(new DefaultTableModel());
            TableModel modeloDatos = jTable.getModel();
            for (int i = 0; i < sectorSeleccionado.getLlamadas().size(); i++) {
                Llamada llamada = sectorSeleccionado.getLlamadas().get(i);
                modeloDatos.setValueAt(llamada.getNumeroLlamada(), i, 0);
                modeloDatos.setValueAt(llamada.isEnCurso(), i, 1);
                modeloDatos.setValueAt(llamada.getFechaInicio(), i, 2);
                modeloDatos.setValueAt(llamada.getFechaFin(), i, 3);
                modeloDatos.setValueAt(llamada.getPuesto().getNumero(), i, 4);
                modeloDatos.setValueAt(llamada.getTrabajador().getNombreCompleto(), i, 5);
                modeloDatos.setValueAt(llamada.calcularDuracionLlamada(), i, 6);
                modeloDatos.setValueAt(llamada.calcularCostoLlamada(), i, 7);
                modeloDatos.setValueAt(llamada.getCliente().getNombrecompleto(), i, 8);
                modeloDatos.setValueAt(llamada.getCliente().getSaldo(), i, 9);

            }
        }
    }

    @Override
    public void mostrarLlamadasSectores(ArrayList<Llamada> llamadasSectores) {
        DefaultTableModel modeloDefault = new DefaultTableModel(new String[]{
            "Sector", "#llamada", "Estado", "Inicio", "Fin", "#puesto", "Trabajador", "Duracion", "Costo", "Cliente", "Saldo"
        }, llamadasSectores.size());
        jTable.setModel(modeloDefault);
        TableModel modeloDatos = jTable.getModel();
        for (int i = 0; i < llamadasSectores.size(); i++) {
            Llamada llamada = llamadasSectores.get(i);
            modeloDatos.setValueAt(llamada.getSector().getNombre(), i, 0);
            modeloDatos.setValueAt(llamada.getNumeroLlamada(), i, 1);
            modeloDatos.setValueAt(llamada.isEnCurso(), i, 2);
            modeloDatos.setValueAt(llamada.getFechaInicio(), i, 3);
            modeloDatos.setValueAt(llamada.getFechaFin(), i, 4);
            modeloDatos.setValueAt(llamada.getPuesto().getNumero(), i, 5);
            modeloDatos.setValueAt(llamada.getTrabajador().getNombreCompleto(), i, 6);
            modeloDatos.setValueAt(llamada.calcularDuracionLlamada(), i, 7);
            modeloDatos.setValueAt(llamada.calcularCostoLlamada(), i, 8);
            modeloDatos.setValueAt(llamada.getCliente().getNombrecompleto(), i, 9);
            modeloDatos.setValueAt(llamada.getCliente().getSaldo(), i, 10);

        }
    }
}
